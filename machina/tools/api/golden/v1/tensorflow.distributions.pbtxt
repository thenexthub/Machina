path: "machina.distributions"
tf_module {
  member {
    name: "Bernoulli"
    mtype: "<class \'machina.python.ops.distributions.distribution._DistributionMeta\'>"
  }
  member {
    name: "Beta"
    mtype: "<class \'machina.python.ops.distributions.distribution._DistributionMeta\'>"
  }
  member {
    name: "Categorical"
    mtype: "<class \'machina.python.ops.distributions.distribution._DistributionMeta\'>"
  }
  member {
    name: "Dirichlet"
    mtype: "<class \'machina.python.ops.distributions.distribution._DistributionMeta\'>"
  }
  member {
    name: "DirichletMultinomial"
    mtype: "<class \'machina.python.ops.distributions.distribution._DistributionMeta\'>"
  }
  member {
    name: "Distribution"
    mtype: "<class \'machina.python.ops.distributions.distribution._DistributionMeta\'>"
  }
  member {
    name: "Exponential"
    mtype: "<class \'machina.python.ops.distributions.distribution._DistributionMeta\'>"
  }
  member {
    name: "FULLY_REPARAMETERIZED"
    mtype: "<class \'machina.python.ops.distributions.distribution.ReparameterizationType\'>"
  }
  member {
    name: "Gamma"
    mtype: "<class \'machina.python.ops.distributions.distribution._DistributionMeta\'>"
  }
  member {
    name: "Laplace"
    mtype: "<class \'machina.python.ops.distributions.distribution._DistributionMeta\'>"
  }
  member {
    name: "Multinomial"
    mtype: "<class \'machina.python.ops.distributions.distribution._DistributionMeta\'>"
  }
  member {
    name: "NOT_REPARAMETERIZED"
    mtype: "<class \'machina.python.ops.distributions.distribution.ReparameterizationType\'>"
  }
  member {
    name: "Normal"
    mtype: "<class \'machina.python.ops.distributions.distribution._DistributionMeta\'>"
  }
  member {
    name: "RegisterKL"
    mtype: "<type \'type\'>"
  }
  member {
    name: "ReparameterizationType"
    mtype: "<type \'type\'>"
  }
  member {
    name: "StudentT"
    mtype: "<class \'machina.python.ops.distributions.distribution._DistributionMeta\'>"
  }
  member {
    name: "Uniform"
    mtype: "<class \'machina.python.ops.distributions.distribution._DistributionMeta\'>"
  }
  member_method {
    name: "kl_divergence"
    argspec: "args=[\'distribution_a\', \'distribution_b\', \'allow_nan_stats\', \'name\'], varargs=None, keywords=None, defaults=[\'True\', \'None\'], "
  }
}
