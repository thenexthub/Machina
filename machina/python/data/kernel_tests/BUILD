load("//machina:strict.default.bzl", "py_strict_library", "py_strict_test")

# Definitions are loaded separately so that copybara can pattern match (and modify) each definition.
load("//machina:machina.default.bzl", "cuda_py_strict_test", "tf_py_strict_test")

package(
    # copybara:uncomment default_applicable_licenses = ["//machina:license"],
    default_visibility = ["//machina:internal"],
    licenses = ["notice"],
)

tf_py_strict_test(
    name = "as_numpy_iterator_test",
    size = "small",
    srcs = ["as_numpy_iterator_test.py"],
    deps = [
        ":test_base",
        "//machina/python/checkpoint",
        "//machina/python/checkpoint:checkpoint_options",
        "//machina/python/data/ops:dataset_ops",
        "//machina/python/eager:test",
        "//machina/python/framework:combinations",
        "//machina/python/framework:constant_op",
        "//machina/python/framework:sparse_tensor",
        "//machina/python/ops:sparse_ops",
        "//machina/python/ops/ragged:ragged_factory_ops",
        "//third_party/py/numpy",
        "@absl_py//absl/testing:parameterized",
    ],
)

tf_py_strict_test(
    name = "batch_test",
    size = "medium",
    srcs = ["batch_test.py"],
    shard_count = 8,
    deps = [
        ":checkpoint_test_base",
        ":test_base",
        "//machina/python/checkpoint",
        "//machina/python/checkpoint:checkpoint_management",
        "//machina/python/data/experimental/ops:global_shuffle_op",
        "//machina/python/data/experimental/ops:random_access",
        "//machina/python/data/ops:dataset_ops",
        "//machina/python/data/ops:options",
        "//machina/python/data/util:nest",
        "//machina/python/framework:combinations",
        "//machina/python/framework:dtypes",
        "//machina/python/framework:errors",
        "//machina/python/framework:sparse_tensor",
        "//machina/python/ops:array_ops",
        "//machina/python/ops:math_ops",
        "//machina/python/ops:script_ops",
        "//machina/python/ops/ragged:ragged_concat_ops",
        "//machina/python/ops/ragged:ragged_factory_ops",
        "//machina/python/ops/ragged:ragged_math_ops",
        "//machina/python/ops/ragged:ragged_tensor",
        "//machina/python/platform:client_testlib",
        "//third_party/py/numpy",
        "@absl_py//absl/testing:parameterized",
    ],
)

tf_py_strict_test(
    name = "bucket_by_sequence_length_test",
    size = "small",
    srcs = ["bucket_by_sequence_length_test.py"],
    deps = [
        ":test_base",
        "//machina/python/data/ops:dataset_ops",
        "//machina/python/eager:context",
        "//machina/python/framework:combinations",
        "//machina/python/framework:dtypes",
        "//machina/python/framework:errors",
        "//machina/python/framework:sparse_tensor",
        "//machina/python/framework:tensor_shape",
        "//machina/python/ops:array_ops",
        "//machina/python/platform:client_testlib",
        "@absl_py//absl/testing:parameterized",
    ],
)

tf_py_strict_test(
    name = "cache_test",
    size = "medium",
    srcs = ["cache_test.py"],
    tags = [
        "noasan",  # TODO(b/231479582): re-enable after flakiness resolved.
        "notap",  # TODO(b/231479582): re-enable after flakiness resolved.
        "notsan",  # TODO(b/206452257): re-enable after flakiness resolved.
    ],
    deps = [
        ":checkpoint_test_base",
        ":test_base",
        "//machina/python/checkpoint",
        "//machina/python/checkpoint:checkpoint_management",
        "//machina/python/data/experimental/ops:global_shuffle_op",
        "//machina/python/data/experimental/ops:random_access",
        "//machina/python/data/ops:dataset_ops",
        "//machina/python/data/ops:options",
        "//machina/python/eager:context",
        "//machina/python/framework:combinations",
        "//machina/python/framework:constant_op",
        "//machina/python/framework:dtypes",
        "//machina/python/framework:errors",
        "//machina/python/framework:ops",
        "//machina/python/ops:math_ops",
        "//machina/python/ops:variables",
        "//machina/python/platform:client_testlib",
        "//third_party/py/numpy",
        "@absl_py//absl/testing:parameterized",
    ],
)

tf_py_strict_test(
    name = "cardinality_test",
    size = "small",
    srcs = ["cardinality_test.py"],
    deps = [
        ":test_base",
        "//machina/python/data/ops:dataset_ops",
        "//machina/python/framework:combinations",
        "//machina/python/platform:client_testlib",
        "@absl_py//absl/testing:parameterized",
    ],
)

tf_py_strict_test(
    name = "checkpoint_test",
    size = "small",
    srcs = ["checkpoint_test.py"],
    grpc_enabled = True,
    deps = [
        ":test_base",
        "//machina/python/checkpoint",
        "//machina/python/checkpoint:checkpoint_management",
        "//machina/python/checkpoint:checkpoint_options",
        "//machina/python/data/experimental/ops:grouping",
        "//machina/python/data/experimental/ops:interleave_ops",
        "//machina/python/data/experimental/ops:scan_ops",
        "//machina/python/data/experimental/ops:take_while_ops",
        "//machina/python/data/ops:dataset_ops",
        "//machina/python/data/ops:options",
        "//machina/python/eager:test",
        "//machina/python/framework:combinations",
        "//machina/python/framework:dtypes",
        "//machina/python/framework:errors",
        "//machina/python/framework:ops",
        "//machina/python/ops:dataset_ops_gen",
        "//machina/python/ops:io_ops",
        "//machina/python/ops:math_ops",
        "//machina/python/ops:parsing_ops",
        "//machina/python/ops:random_ops",
        "//machina/python/ops:script_ops",
        "//machina/python/ops:variables",
        "//machina/python/platform:gfile",
        "@absl_py//absl/testing:parameterized",
    ],
)

py_strict_library(
    name = "checkpoint_test_base",
    srcs = ["checkpoint_test_base.py"],
    deps = [
        "//machina/python/checkpoint",
        "//machina/python/checkpoint:checkpoint_management",
        "//machina/python/checkpoint:checkpoint_options",
        "//machina/python/data/experimental/ops:iterator_ops",
        "//machina/python/data/ops:dataset_ops",
        "//machina/python/data/ops:options",
        "//machina/python/eager:context",
        "//machina/python/framework:combinations",
        "//machina/python/framework:dtypes",
        "//machina/python/framework:errors",
        "//machina/python/framework:ops",
        "//machina/python/framework:sparse_tensor",
        "//machina/python/framework:tensor",
        "//machina/python/ops:lookup_ops",
        "//machina/python/ops:variables",
        "//machina/python/ops/ragged:ragged_tensor_value",
        "//machina/python/platform:client_testlib",
        "//machina/python/platform:gfile",
        "//machina/python/training:saver",
        "//machina/python/util:nest",
        "//third_party/py/numpy",
    ],
)

tf_py_strict_test(
    name = "choose_from_datasets_test",
    size = "small",
    srcs = ["choose_from_datasets_test.py"],
    shard_count = 12,
    deps = [
        ":checkpoint_test_base",
        ":test_base",
        "//machina/python:extra_py_tests_deps",
        "//machina/python/data/ops:dataset_ops",
        "//machina/python/data/ops:options",
        "//machina/python/framework:combinations",
        "//machina/python/framework:constant_op",
        "//machina/python/framework:dtypes",
        "//machina/python/framework:errors",
        "//machina/python/ops:stateless_random_ops",
        "//machina/python/platform:client_testlib",
        "//third_party/py/numpy",
        "@absl_py//absl/testing:parameterized",
    ],
)

tf_py_strict_test(
    name = "concatenate_test",
    size = "medium",
    srcs = ["concatenate_test.py"],
    shard_count = 20,
    deps = [
        ":checkpoint_test_base",
        ":test_base",
        "//machina/python/data/experimental/ops:global_shuffle_op",
        "//machina/python/data/experimental/ops:random_access",
        "//machina/python/data/ops:dataset_ops",
        "//machina/python/data/ops:options",
        "//machina/python/data/util:nest",
        "//machina/python/framework:combinations",
        "//machina/python/framework:errors",
        "//machina/python/framework:tensor_shape",
        "//machina/python/platform:client_testlib",
        "//third_party/py/numpy",
        "@absl_py//absl/testing:parameterized",
    ],
)

tf_py_strict_test(
    name = "counter_test",
    size = "small",
    srcs = ["counter_test.py"],
    deps = [
        ":checkpoint_test_base",
        ":test_base",
        "//machina/python/data/ops:dataset_ops",
        "//machina/python/data/ops:options",
        "//machina/python/framework:combinations",
        "//machina/python/framework:dtypes",
        "//machina/python/platform:client_testlib",
        "@absl_py//absl/testing:parameterized",
    ],
)

tf_py_strict_test(
    name = "dataset_spec_test",
    size = "small",
    srcs = ["dataset_spec_test.py"],
    deps = [
        ":test_base",
        "//machina/python/data/ops:dataset_ops",
        "//machina/python/eager:def_function",
        "//machina/python/framework:combinations",
        "//machina/python/framework:dtypes",
        "//machina/python/framework:tensor_shape",
        "//machina/python/framework:tensor_spec",
        "//machina/python/platform:client_testlib",
        "//third_party/py/numpy",
        "@absl_py//absl/testing:parameterized",
    ],
)

tf_py_strict_test(
    name = "dataset_test",
    size = "medium",
    srcs = ["dataset_test.py"],
    deps = [
        ":test_base",
        "//machina/core:protos_all_py",
        "//machina/python/data/experimental/ops:testing",
        "//machina/python/data/ops:dataset_ops",
        "//machina/python/data/ops:debug_mode",
        "//machina/python/data/ops:optional_ops",
        "//machina/python/data/ops:options",
        "//machina/python/data/ops:readers",
        "//machina/python/data/util:nest",
        "//machina/python/data/util:structure",
        "//machina/python/eager:context",
        "//machina/python/eager:def_function",
        "//machina/python/framework:combinations",
        "//machina/python/framework:constant_op",
        "//machina/python/framework:dtypes",
        "//machina/python/framework:errors",
        "//machina/python/framework:ops",
        "//machina/python/framework:sparse_tensor",
        "//machina/python/framework:tensor_shape",
        "//machina/python/framework:tensor_spec",
        "//machina/python/lib/io:tf_record",
        "//machina/python/ops:array_ops",
        "//machina/python/ops:lookup_ops",
        "//machina/python/ops:random_ops",
        "//machina/python/platform:client_testlib",
        "//third_party/py/numpy",
        "@absl_py//absl/testing:parameterized",
    ],
)

tf_py_strict_test(
    name = "enumerate_test",
    size = "small",
    srcs = ["enumerate_test.py"],
    deps = [
        ":checkpoint_test_base",
        ":test_base",
        "//machina/python/data/ops:dataset_ops",
        "//machina/python/data/ops:options",
        "//machina/python/framework:combinations",
        "//machina/python/framework:constant_op",
        "//machina/python/framework:dtypes",
        "//machina/python/framework:tensor_shape",
        "//machina/python/platform:client_testlib",
        "@absl_py//absl/testing:parameterized",
    ],
)

tf_py_strict_test(
    name = "filter_test",
    size = "small",
    srcs = ["filter_test.py"],
    shard_count = 8,
    deps = [
        ":checkpoint_test_base",
        ":test_base",
        "//machina/python/data/experimental/ops:global_shuffle_op",
        "//machina/python/data/ops:dataset_ops",
        "//machina/python/data/ops:options",
        "//machina/python/framework:combinations",
        "//machina/python/framework:errors",
        "//machina/python/framework:sparse_tensor",
        "//machina/python/ops:map_fn",
        "//machina/python/ops:math_ops",
        "//machina/python/platform:client_testlib",
        "//third_party/py/numpy",
        "@absl_py//absl/testing:parameterized",
    ],
)

tf_py_strict_test(
    name = "fingerprint_test",
    size = "small",
    srcs = ["fingerprint_test.py"],
    deps = [
        "//machina/python/data/kernel_tests:checkpoint_test_base",
        "//machina/python/data/kernel_tests:test_base",
        "//machina/python/data/ops:dataset_ops",
        "//machina/python/data/ops:options",
        "//machina/python/data/ops:readers",
        "//machina/python/framework:combinations",
        "//machina/python/framework:errors",
        "//machina/python/platform:client_testlib",
        "@absl_py//absl/testing:parameterized",
    ],
)

tf_py_strict_test(
    name = "fixed_length_record_dataset_test",
    size = "medium",
    srcs = ["fixed_length_record_dataset_test.py"],
    shard_count = 4,
    deps = [
        ":checkpoint_test_base",
        ":test_base",
        "//machina/python/data/ops:readers",
        "//machina/python/framework:combinations",
        "//machina/python/framework:errors",
        "//machina/python/platform:client_testlib",
        "//machina/python/util:compat",
        "@absl_py//absl/testing:parameterized",
    ],
)

tf_py_strict_test(
    name = "flat_map_test",
    size = "medium",
    srcs = ["flat_map_test.py"],
    grpc_enabled = True,
    shard_count = 8,
    tags = [
        "nomac",  # b/284304023
    ],
    deps = [
        ":checkpoint_test_base",
        ":test_base",
        "//machina/core:protos_all_py",
        "//machina/python/client:session",
        "//machina/python/data/experimental/ops:global_shuffle_op",
        "//machina/python/data/ops:dataset_ops",
        "//machina/python/data/ops:options",
        "//machina/python/framework:combinations",
        "//machina/python/framework:constant_op",
        "//machina/python/framework:dtypes",
        "//machina/python/framework:errors",
        "//machina/python/framework:function",
        "//machina/python/framework:sparse_tensor",
        "//machina/python/ops:math_ops",
        "//machina/python/ops:random_ops",
        "//machina/python/ops:sparse_ops",
        "//machina/python/ops:stateless_random_ops",
        "//machina/python/ops:tensor_array_ops",
        "//machina/python/ops:variable_scope",
        "//machina/python/ops/ragged:ragged_conversion_ops",
        "//machina/python/ops/ragged:ragged_tensor",
        "//machina/python/platform:client_testlib",
        "//machina/python/training:server_lib",
        "//third_party/py/numpy",
        "@absl_py//absl/testing:parameterized",
    ],
)

tf_py_strict_test(
    name = "from_generator_test",
    size = "small",
    srcs = ["from_generator_test.py"],
    shard_count = 4,
    deps = [
        ":test_base",
        "//machina/python/data/ops:dataset_ops",
        "//machina/python/framework:combinations",
        "//machina/python/framework:constant_op",
        "//machina/python/framework:dtypes",
        "//machina/python/framework:errors",
        "//machina/python/framework:sparse_tensor",
        "//machina/python/framework:tensor_spec",
        "//machina/python/ops:script_ops",
        "//machina/python/ops:sparse_ops",
        "//machina/python/ops/ragged:ragged_factory_ops",
        "//machina/python/ops/ragged:ragged_tensor",
        "//machina/python/platform:client_testlib",
        "//third_party/py/numpy",
        "@absl_py//absl/testing:parameterized",
    ],
)

tf_py_strict_test(
    name = "from_sparse_tensor_slices_test",
    size = "small",
    srcs = ["from_sparse_tensor_slices_test.py"],
    deps = [
        ":checkpoint_test_base",
        ":test_base",
        "//machina/python/data/ops:dataset_ops",
        "//machina/python/framework:combinations",
        "//machina/python/framework:dtypes",
        "//machina/python/framework:errors",
        "//machina/python/framework:sparse_tensor",
        "//machina/python/ops:array_ops",
        "//machina/python/platform:client_testlib",
        "//third_party/py/numpy",
        "@absl_py//absl/testing:parameterized",
    ],
)

tf_py_strict_test(
    name = "from_tensor_slices_test",
    size = "medium",
    srcs = ["from_tensor_slices_test.py"],
    shard_count = 4,
    deps = [
        ":checkpoint_test_base",
        ":test_base",
        "//machina/python/data/experimental/ops:global_shuffle_op",
        "//machina/python/data/experimental/ops:random_access",
        "//machina/python/data/ops:dataset_ops",
        "//machina/python/data/ops:options",
        "//machina/python/framework:combinations",
        "//machina/python/framework:dtypes",
        "//machina/python/framework:errors",
        "//machina/python/framework:sparse_tensor",
        "//machina/python/framework:tensor_shape",
        "//machina/python/ops/ragged:ragged_factory_ops",
        "//machina/python/platform:client_testlib",
        "//third_party/py/numpy",
        "@absl_py//absl/testing:parameterized",
    ],
)

tf_py_strict_test(
    name = "from_tensors_test",
    size = "medium",
    srcs = ["from_tensors_test.py"],
    shard_count = 4,
    deps = [
        ":checkpoint_test_base",
        ":test_base",
        "//machina/core:protos_all_py",
        "//machina/python/client:session",
        "//machina/python/data/experimental/ops:global_shuffle_op",
        "//machina/python/data/experimental/ops:random_access",
        "//machina/python/data/ops:dataset_ops",
        "//machina/python/data/ops:options",
        "//machina/python/data/util:nest",
        "//machina/python/framework:combinations",
        "//machina/python/framework:dtypes",
        "//machina/python/framework:errors",
        "//machina/python/framework:ops",
        "//machina/python/framework:sparse_tensor",
        "//machina/python/framework:tensor_shape",
        "//machina/python/ops:array_ops_stack",
        "//machina/python/ops:math_ops",
        "//machina/python/ops:resource_variable_ops",
        "//machina/python/ops:tensor_array_ops",
        "//machina/python/ops/ragged:ragged_factory_ops",
        "//machina/python/platform:client_testlib",
        "//third_party/py/numpy",
        "@absl_py//absl/testing:parameterized",
    ],
)

tf_py_strict_test(
    name = "get_single_element_test",
    size = "small",
    srcs = ["get_single_element_test.py"],
    deps = [
        ":test_base",
        "//machina/python/data/ops:dataset_ops",
        "//machina/python/eager:def_function",
        "//machina/python/framework:combinations",
        "//machina/python/framework:errors",
        "//machina/python/framework:sparse_tensor",
        "//machina/python/ops:array_ops",
        "//machina/python/ops:variables",
        "//machina/python/platform:client_testlib",
        "@absl_py//absl/testing:parameterized",
    ],
)

tf_py_strict_test(
    name = "group_by_window_test",
    size = "medium",
    srcs = ["group_by_window_test.py"],
    shard_count = 4,
    deps = [
        ":checkpoint_test_base",
        ":test_base",
        "//machina/core:protos_all_py",
        "//machina/python/data/ops:dataset_ops",
        "//machina/python/framework:combinations",
        "//machina/python/framework:constant_op",
        "//machina/python/framework:dtypes",
        "//machina/python/framework:errors",
        "//machina/python/framework:ops",
        "//machina/python/framework:tensor_shape",
        "//machina/python/ops:array_ops",
        "//machina/python/ops:math_ops",
        "//machina/python/ops:string_ops",
        "//machina/python/platform:client_testlib",
        "//third_party/py/numpy",
        "@absl_py//absl/testing:parameterized",
    ],
)

tf_py_strict_test(
    name = "ignore_errors_test",
    size = "small",
    srcs = ["ignore_errors_test.py"],
    deps = [
        ":checkpoint_test_base",
        ":test_base",
        "//machina/python/data/ops:dataset_ops",
        "//machina/python/data/ops:options",
        "//machina/python/data/ops:readers",
        "//machina/python/framework:combinations",
        "//machina/python/framework:errors",
        "//machina/python/lib/io:python_io",
        "//machina/python/ops:array_ops",
        "//machina/python/ops:io_ops",
        "//machina/python/platform:client_testlib",
        "//machina/python/util:compat",
        "//third_party/py/numpy",
        "@absl_py//absl/testing:parameterized",
    ],
)

tf_py_strict_test(
    name = "interleave_test",
    size = "medium",
    srcs = ["interleave_test.py"],
    shard_count = 24,
    deps = [
        ":checkpoint_test_base",
        ":test_base",
        "//machina/python/data/experimental/ops:testing",
        "//machina/python/data/ops:dataset_ops",
        "//machina/python/data/ops:options",
        "//machina/python/framework:combinations",
        "//machina/python/framework:errors",
        "//machina/python/framework:sparse_tensor",
        "//machina/python/ops:array_ops",
        "//machina/python/ops:math_ops",
        "//machina/python/ops:sparse_ops",
        "//machina/python/ops:stateless_random_ops",
        "//machina/python/platform:client_testlib",
        "//third_party/py/numpy",
        "@absl_py//absl/testing:parameterized",
    ],
)

tf_py_strict_test(
    name = "iterator_cluster_test",
    size = "small",
    srcs = ["iterator_cluster_test.py"],
    grpc_enabled = True,
    tags = [
        "no_oss",  # Test flaky due to port collisions.
        "no_windows",
    ],
    deps = [
        ":test_base",
        "//machina/core:protos_all_py",
        "//machina/python/client:session",
        "//machina/python/data/ops:dataset_ops",
        "//machina/python/data/ops:iterator_ops",
        "//machina/python/framework:combinations",
        "//machina/python/framework:constant_op",
        "//machina/python/framework:dtypes",
        "//machina/python/framework:errors",
        "//machina/python/framework:function",
        "//machina/python/framework:ops",
        "//machina/python/framework:test_lib",
        "//machina/python/ops:array_ops",
        "//machina/python/ops:functional_ops",
        "//machina/python/ops:lookup_ops",
        "//machina/python/ops:math_ops",
        "//machina/python/ops:string_ops",
        "//machina/python/platform:client_testlib",
        "@absl_py//absl/testing:parameterized",
    ],
)

cuda_py_strict_test(
    name = "iterator_test",
    size = "small",
    srcs = ["iterator_test.py"],
    grpc_enabled = True,
    deps = [
        ":test_base",
        "//machina/core:protos_all_py",
        "//machina/python/client:session",
        "//machina/python/data/ops:dataset_ops",
        "//machina/python/data/ops:iterator_ops",
        "//machina/python/data/util:structure",
        "//machina/python/eager:context",
        "//machina/python/eager:def_function",
        "//machina/python/framework:combinations",
        "//machina/python/framework:constant_op",
        "//machina/python/framework:dtypes",
        "//machina/python/framework:errors",
        "//machina/python/framework:function",
        "//machina/python/framework:ops",
        "//machina/python/framework:sparse_tensor",
        "//machina/python/framework:tensor",
        "//machina/python/framework:test_lib",
        "//machina/python/ops:array_ops",
        "//machina/python/ops:data_flow_ops",
        "//machina/python/ops:functional_ops",
        "//machina/python/ops:gradients_impl",
        "//machina/python/ops:math_ops",
        "//machina/python/ops:parsing_ops",
        "//machina/python/ops:script_ops",
        "//machina/python/ops:variables",
        "//machina/python/platform:client_testlib",
        "//machina/python/training:server_lib",
        "//machina/python/util:compat",
        "//third_party/py/numpy",
        "@absl_py//absl/testing:parameterized",
    ],
)

tf_py_strict_test(
    name = "len_test",
    size = "medium",
    srcs = ["len_test.py"],
    deps = [
        ":test_base",
        "//machina/python/data/ops:dataset_ops",
        "//machina/python/framework:combinations",
        "//machina/python/platform:client_testlib",
        "@absl_py//absl/testing:parameterized",
    ],
)

tf_py_strict_test(
    name = "list_files_test",
    size = "medium",
    srcs = ["list_files_test.py"],
    shard_count = 4,
    deps = [
        ":checkpoint_test_base",
        ":test_base",
        "//machina/python/data/experimental/ops:global_shuffle_op",
        "//machina/python/data/ops:dataset_ops",
        "//machina/python/data/ops:options",
        "//machina/python/data/ops:test_mode",
        "//machina/python/framework:combinations",
        "//machina/python/framework:errors",
        "//machina/python/platform:client_testlib",
        "//machina/python/util:compat",
        "@absl_py//absl/testing:parameterized",
    ],
)

tf_py_strict_test(
    name = "map_test",
    size = "medium",
    srcs = ["map_test.py"],
    shard_count = 19,
    deps = [
        ":checkpoint_test_base",
        ":test_base",
        "//machina/core:protos_all_py",
        "//machina/python:pywrap_sanitizers",
        "//machina/python:tf2",
        "//machina/python/checkpoint",
        "//machina/python/checkpoint:checkpoint_management",
        "//machina/python/data/experimental/ops:cardinality",
        "//machina/python/data/experimental/ops:global_shuffle_op",
        "//machina/python/data/experimental/ops:random_access",
        "//machina/python/data/ops:dataset_ops",
        "//machina/python/data/ops:options",
        "//machina/python/eager:context",
        "//machina/python/eager:def_function",
        "//machina/python/framework:combinations",
        "//machina/python/framework:constant_op",
        "//machina/python/framework:dtypes",
        "//machina/python/framework:errors",
        "//machina/python/framework:function",
        "//machina/python/framework:ops",
        "//machina/python/framework:sparse_tensor",
        "//machina/python/framework:tensor",
        "//machina/python/framework:tensor_util",
        "//machina/python/ops:array_ops",
        "//machina/python/ops:cond",
        "//machina/python/ops:control_flow_case",
        "//machina/python/ops:data_flow_ops",
        "//machina/python/ops:lookup_ops",
        "//machina/python/ops:map_fn",
        "//machina/python/ops:math_ops",
        "//machina/python/ops:random_ops",
        "//machina/python/ops:script_ops",
        "//machina/python/ops:sparse_ops",
        "//machina/python/ops:stateless_random_ops",
        "//machina/python/ops:string_ops",
        "//machina/python/ops:tensor_array_ops",
        "//machina/python/ops:variable_scope",
        "//machina/python/ops:variable_v1",
        "//machina/python/ops:variables",
        "//machina/python/ops/ragged:ragged_concat_ops",
        "//machina/python/ops/ragged:ragged_factory_ops",
        "//machina/python/ops/ragged:ragged_tensor",
        "//machina/python/platform:client_testlib",
        "//third_party/py/numpy",
        "@absl_py//absl/testing:parameterized",
    ],
)

cuda_py_strict_test(
    name = "memory_cleanup_test",
    size = "medium",
    srcs = ["memory_cleanup_test.py"],
    shard_count = 12,
    tags = [
        "no_cuda_asan",  # TODO(b/183963686)
    ],
    xla_tags = [
        "no_cuda_asan",  # TODO(b/183963686)
    ],
    deps = [
        ":test_base",
        "//machina/python/data/ops:dataset_ops",
        "//machina/python/data/ops:multi_device_iterator_ops",
        "//machina/python/framework:combinations",
        "//machina/python/framework:dtypes",
        "//machina/python/platform:client_testlib",
        "//machina/python/platform:tf_logging",
        "//machina/python/types:internal",
        "@absl_py//absl/testing:parameterized",
    ],
)

cuda_py_strict_test(
    name = "multi_device_iterator_test",
    size = "medium",
    srcs = ["multi_device_iterator_test.py"],
    shard_count = 2,
    tags = [
        "no_gpu",  # TODO(b/141255188)
        "no_oss",
        "no_windows_gpu",
    ],
    deps = [
        ":test_base",
        "//machina/python/data/experimental/ops:testing",
        "//machina/python/data/ops:dataset_ops",
        "//machina/python/data/ops:multi_device_iterator_ops",
        "//machina/python/data/ops:options",
        "//machina/python/eager:cancellation",
        "//machina/python/eager:context",
        "//machina/python/eager:def_function",
        "//machina/python/eager:executor",
        "//machina/python/framework:combinations",
        "//machina/python/framework:dtypes",
        "//machina/python/framework:errors",
        "//machina/python/framework:ops",
        "//machina/python/framework:tensor_spec",
        "//machina/python/ops:data_flow_ops",
        "//machina/python/platform:client_testlib",
        "@absl_py//absl/testing:parameterized",
    ],
)

cuda_py_strict_test(
    name = "optional_test",
    size = "small",
    srcs = ["optional_test.py"],
    deps = [
        ":test_base",
        "//machina/python/data/ops:dataset_ops",
        "//machina/python/data/ops:iterator_ops",
        "//machina/python/data/ops:optional_ops",
        "//machina/python/data/util:structure",
        "//machina/python/eager:context",
        "//machina/python/eager:def_function",
        "//machina/python/framework:combinations",
        "//machina/python/framework:constant_op",
        "//machina/python/framework:dtypes",
        "//machina/python/framework:errors",
        "//machina/python/framework:ops",
        "//machina/python/framework:sparse_tensor",
        "//machina/python/framework:tensor_shape",
        "//machina/python/framework:tensor_spec",
        "//machina/python/framework:test_lib",
        "//machina/python/ops:array_ops",
        "//machina/python/ops:math_ops",
        "//machina/python/platform:client_testlib",
        "@absl_py//absl/testing:parameterized",
    ],
)

tf_py_strict_test(
    name = "options_test",
    size = "small",
    srcs = ["options_test.py"],
    deps = [
        ":test_base",
        "//machina/core:protos_all_py",
        "//machina/python/data/experimental/ops:testing",
        "//machina/python/data/ops:dataset_ops",
        "//machina/python/data/ops:options",
        "//machina/python/eager:context",
        "//machina/python/eager:def_function",
        "//machina/python/framework:combinations",
        "//machina/python/platform:client_testlib",
        "@absl_py//absl/testing:parameterized",
    ],
)

tf_py_strict_test(
    name = "padded_batch_test",
    size = "medium",
    srcs = ["padded_batch_test.py"],
    shard_count = 2,
    deps = [
        ":checkpoint_test_base",
        ":test_base",
        "//machina/python/data/ops:dataset_ops",
        "//machina/python/data/ops:options",
        "//machina/python/framework:combinations",
        "//machina/python/framework:constant_op",
        "//machina/python/framework:dtypes",
        "//machina/python/framework:errors",
        "//machina/python/framework:sparse_tensor",
        "//machina/python/framework:tensor_shape",
        "//machina/python/ops:array_ops",
        "//machina/python/ops:math_ops",
        "//machina/python/ops:string_ops",
        "//machina/python/ops/ragged:ragged_tensor_value",
        "//machina/python/platform:client_testlib",
        "//machina/python/util:compat",
        "//third_party/py/numpy",
        "@absl_py//absl/testing:parameterized",
    ],
)

cuda_py_strict_test(
    name = "placement_test",
    size = "small",
    srcs = ["placement_test.py"],
    deps = [
        ":test_base",
        "//machina/python/data/experimental/ops:prefetching_ops",
        "//machina/python/data/ops:dataset_ops",
        "//machina/python/eager:def_function",
        "//machina/python/framework:combinations",
        "//machina/python/framework:config",
        "//machina/python/framework:constant_op",
        "//machina/python/framework:dtypes",
        "//machina/python/framework:ops",
        "//machina/python/framework:test_lib",
        "//machina/python/framework:test_ops",
        "//machina/python/ops:array_ops",
        "//machina/python/ops:cond",
        "//machina/python/ops:dataset_ops_gen",
        "//machina/python/ops:math_ops",
        "//machina/python/platform:client_testlib",
        "@absl_py//absl/testing:parameterized",
    ],
)

tf_py_strict_test(
    name = "prefetch_test",
    size = "medium",
    srcs = ["prefetch_test.py"],
    deps = [
        ":checkpoint_test_base",
        ":test_base",
        "//machina/python/data/experimental/ops:random_access",
        "//machina/python/data/ops:dataset_ops",
        "//machina/python/data/ops:options",
        "//machina/python/framework:combinations",
        "//machina/python/framework:dtypes",
        "//machina/python/framework:errors",
        "//machina/python/ops:script_ops",
        "//machina/python/platform:client_testlib",
        "@absl_py//absl/testing:parameterized",
    ],
)

tf_py_strict_test(
    name = "ragged_batch_test",
    size = "small",
    srcs = ["ragged_batch_test.py"],
    shard_count = 4,
    deps = [
        ":test_base",
        "//machina/python/data/ops:dataset_ops",
        "//machina/python/data/util:nest",
        "//machina/python/framework:combinations",
        "//machina/python/framework:errors",
        "//machina/python/framework:ops",
        "//machina/python/framework:sparse_tensor",
        "//machina/python/ops:array_ops",
        "//machina/python/ops:array_ops_stack",
        "//machina/python/ops:math_ops",
        "//machina/python/ops/ragged:ragged_concat_ops",
        "//machina/python/ops/ragged:ragged_factory_ops",
        "//machina/python/platform:client_testlib",
        "//third_party/py/numpy",
        "@absl_py//absl/testing:parameterized",
    ],
)

tf_py_strict_test(
    name = "sparse_batch_test",
    size = "medium",
    srcs = ["sparse_batch_test.py"],
    deps = [
        ":checkpoint_test_base",
        ":test_base",
        "//machina/python/data/ops:dataset_ops",
        "//machina/python/framework:combinations",
        "//machina/python/framework:errors",
        "//machina/python/ops:array_ops",
        "//machina/python/platform:client_testlib",
        "//third_party/py/numpy",
        "@absl_py//absl/testing:parameterized",
    ],
)

tf_py_strict_test(
    name = "random_test",
    size = "small",
    srcs = ["random_test.py"],
    deps = [
        ":checkpoint_test_base",
        ":test_base",
        "//machina/python:tf2",
        "//machina/python/data/ops:dataset_ops",
        "//machina/python/eager:def_function",
        "//machina/python/framework:combinations",
        "//machina/python/framework:random_seed",
        "//machina/python/platform:client_testlib",
        "@absl_py//absl/testing:parameterized",
    ],
)

tf_py_strict_test(
    name = "range_test",
    size = "medium",
    srcs = ["range_test.py"],
    deps = [
        ":checkpoint_test_base",
        ":test_base",
        "//machina/python/data/experimental/ops:random_access",
        "//machina/python/data/ops:dataset_ops",
        "//machina/python/data/ops:options",
        "//machina/python/framework:combinations",
        "//machina/python/framework:dtypes",
        "//machina/python/framework:errors",
        "//machina/python/platform:client_testlib",
        "@absl_py//absl/testing:parameterized",
    ],
)

cuda_py_strict_test(
    name = "reduce_test",
    size = "medium",
    srcs = ["reduce_test.py"],
    tags = [
        "no_cuda_asan",  # times out
    ],
    deps = [
        ":test_base",
        "//machina/python/data/experimental/ops:testing",
        "//machina/python/data/ops:dataset_ops",
        "//machina/python/eager:def_function",
        "//machina/python/framework:combinations",
        "//machina/python/framework:constant_op",
        "//machina/python/framework:dtypes",
        "//machina/python/framework:errors",
        "//machina/python/framework:ops",
        "//machina/python/framework:sparse_tensor",
        "//machina/python/framework:test_lib",
        "//machina/python/ops:array_ops",
        "//machina/python/ops:math_ops",
        "//machina/python/ops:variables",
        "//machina/python/platform:client_testlib",
        "//third_party/py/numpy",
        "@absl_py//absl/testing:parameterized",
    ],
)

tf_py_strict_test(
    name = "rejection_resample_test",
    size = "medium",
    srcs = ["rejection_resample_test.py"],
    shard_count = 10,
    deps = [
        ":test_base",
        "//machina/python/data/ops:dataset_ops",
        "//machina/python/framework:combinations",
        "//machina/python/framework:dtypes",
        "//machina/python/framework:errors",
        "//machina/python/ops:math_ops",
        "//machina/python/ops:random_ops",
        "//machina/python/ops:string_ops",
        "//machina/python/platform:client_testlib",
        "//machina/python/util:compat",
        "//third_party/py/numpy",
        "@absl_py//absl/testing:parameterized",
    ],
)

tf_py_strict_test(
    name = "repeat_test",
    size = "medium",
    srcs = ["repeat_test.py"],
    shard_count = 2,
    deps = [
        ":checkpoint_test_base",
        ":test_base",
        "//machina/python/data/experimental/ops:global_shuffle_op",
        "//machina/python/data/experimental/ops:random_access",
        "//machina/python/data/ops:dataset_ops",
        "//machina/python/data/ops:options",
        "//machina/python/framework:combinations",
        "//machina/python/framework:dtypes",
        "//machina/python/framework:errors",
        "//machina/python/platform:client_testlib",
        "//third_party/py/numpy",
        "@absl_py//absl/testing:parameterized",
    ],
)

tf_py_strict_test(
    name = "sample_from_datasets_test",
    size = "medium",
    srcs = ["sample_from_datasets_test.py"],
    shard_count = 24,
    deps = [
        ":checkpoint_test_base",
        ":test_base",
        "//machina/python:extra_py_tests_deps",
        "//machina/python/compat",
        "//machina/python/data/ops:dataset_ops",
        "//machina/python/data/ops:options",
        "//machina/python/eager:def_function",
        "//machina/python/framework:combinations",
        "//machina/python/framework:errors",
        "//machina/python/framework:ops",
        "//machina/python/framework:random_seed",
        "//machina/python/platform:client_testlib",
        "//third_party/py/numpy",
        "@absl_py//absl/testing:parameterized",
    ],
)

cuda_py_strict_test(
    name = "scan_test",
    size = "medium",
    srcs = ["scan_test.py"],
    deps = [
        ":checkpoint_test_base",
        ":test_base",
        "//machina/python/data/ops:dataset_ops",
        "//machina/python/data/ops:options",
        "//machina/python/framework:combinations",
        "//machina/python/framework:constant_op",
        "//machina/python/framework:dtypes",
        "//machina/python/framework:errors",
        "//machina/python/framework:ops",
        "//machina/python/framework:sparse_tensor",
        "//machina/python/framework:test_lib",
        "//machina/python/framework:test_ops",
        "//machina/python/ops:array_ops",
        "//machina/python/ops:cond",
        "//machina/python/ops:control_flow_v2_toggles",
        "//machina/python/ops:math_ops",
        "//machina/python/ops:script_ops",
        "//machina/python/ops:tensor_array_ops",
        "//machina/python/ops:variables",
        "//machina/python/platform:client_testlib",
        "//third_party/py/numpy",
        "@absl_py//absl/testing:parameterized",
    ],
)

tf_py_strict_test(
    name = "shard_test",
    size = "medium",
    srcs = ["shard_test.py"],
    shard_count = 8,
    deps = [
        ":checkpoint_test_base",
        ":test_base",
        "//machina/python/data/experimental/ops:global_shuffle_op",
        "//machina/python/data/experimental/ops:random_access",
        "//machina/python/data/ops:dataset_ops",
        "//machina/python/data/ops:options",
        "//machina/python/framework:combinations",
        "//machina/python/framework:errors",
        "//machina/python/platform:client_testlib",
        "@absl_py//absl/testing:parameterized",
    ],
)

tf_py_strict_test(
    name = "shuffle_test",
    size = "medium",
    srcs = ["shuffle_test.py"],
    shard_count = 8,
    tags = ["requires-mem:16g"],
    deps = [
        ":checkpoint_test_base",
        ":test_base",
        "//machina/python:pywrap_sanitizers",
        "//machina/python/checkpoint",
        "//machina/python/checkpoint:checkpoint_management",
        "//machina/python/data/experimental/ops:iterator_ops",
        "//machina/python/data/experimental/ops:random_access",
        "//machina/python/data/ops:dataset_ops",
        "//machina/python/data/ops:options",
        "//machina/python/eager:def_function",
        "//machina/python/framework:combinations",
        "//machina/python/framework:constant_op",
        "//machina/python/framework:dtypes",
        "//machina/python/framework:errors",
        "//machina/python/framework:ops",
        "//machina/python/framework:random_seed",
        "//machina/python/framework:tensor_spec",
        "//machina/python/ops:array_ops",
        "//machina/python/ops:check_ops",
        "//machina/python/ops:stateless_random_ops",
        "//machina/python/ops:variables",
        "//machina/python/platform:client_testlib",
        "//machina/python/training:saver",
        "//third_party/py/numpy",
        "@absl_py//absl/testing:parameterized",
    ],
)

tf_py_strict_test(
    name = "skip_test",
    size = "medium",
    srcs = ["skip_test.py"],
    shard_count = 8,
    deps = [
        ":checkpoint_test_base",
        ":test_base",
        "//machina/python/data/experimental/ops:global_shuffle_op",
        "//machina/python/data/experimental/ops:random_access",
        "//machina/python/data/ops:dataset_ops",
        "//machina/python/data/ops:options",
        "//machina/python/framework:combinations",
        "//machina/python/framework:errors",
        "//machina/python/platform:client_testlib",
        "//third_party/py/numpy",
        "@absl_py//absl/testing:parameterized",
    ],
)

tf_py_strict_test(
    name = "snapshot_test",
    size = "medium",
    srcs = ["snapshot_test.py"],
    shard_count = 16,
    tags = [
        "no_tsan",  # TODO(b/191433147): reenable
        "no_windows",  # TODO(b/182379890)
        "notap",  # TODO(b/192359227)
    ],
    deps = [
        ":checkpoint_test_base",
        ":test_base",
        ":tf_record_test_base",
        "//machina/python/data/experimental/ops:snapshot",
        "//machina/python/data/ops:dataset_ops",
        "//machina/python/data/ops:options",
        "//machina/python/data/ops:readers",
        "//machina/python/framework:combinations",
        "//machina/python/framework:errors",
        "//machina/python/framework:ops",
        "//machina/python/ops:array_ops_gen",
        "//machina/python/ops:string_ops",
        "//machina/python/platform:client_testlib",
        "@absl_py//absl/testing:parameterized",
    ],
)

tf_py_strict_test(
    name = "take_test",
    size = "medium",
    srcs = ["take_test.py"],
    shard_count = 4,
    deps = [
        ":checkpoint_test_base",
        ":test_base",
        "//machina/python/data/experimental/ops:global_shuffle_op",
        "//machina/python/data/experimental/ops:random_access",
        "//machina/python/data/ops:dataset_ops",
        "//machina/python/data/ops:options",
        "//machina/python/framework:combinations",
        "//machina/python/framework:errors",
        "//machina/python/platform:client_testlib",
        "//third_party/py/numpy",
        "@absl_py//absl/testing:parameterized",
    ],
)

tf_py_strict_test(
    name = "take_while_test",
    size = "small",
    srcs = ["take_while_test.py"],
    shard_count = 4,
    deps = [
        ":checkpoint_test_base",
        ":test_base",
        "//machina/python/data/ops:dataset_ops",
        "//machina/python/data/ops:options",
        "//machina/python/framework:combinations",
        "//machina/python/framework:constant_op",
        "//machina/python/framework:errors",
        "//machina/python/ops:array_ops",
        "//machina/python/ops:math_ops",
        "//machina/python/platform:client_testlib",
        "//third_party/py/numpy",
        "@absl_py//absl/testing:parameterized",
    ],
)

py_strict_library(
    name = "test_base",
    srcs = ["test_base.py"],
    deps = [
        "//machina/python/data/experimental/ops:lookup_ops",
        "//machina/python/data/experimental/ops:random_access",
        "//machina/python/data/ops:dataset_ops",
        "//machina/python/data/ops:test_mode",
        "//machina/python/data/util:nest",
        "//machina/python/data/util:structure",
        "//machina/python/eager:context",
        "//machina/python/framework:combinations",
        "//machina/python/framework:config",
        "//machina/python/framework:constant_op",
        "//machina/python/framework:dtypes",
        "//machina/python/framework:errors",
        "//machina/python/framework:ops",
        "//machina/python/framework:sparse_tensor",
        "//machina/python/ops:array_ops",
        "//machina/python/ops:dataset_ops_gen",
        "//machina/python/ops:experimental_dataset_ops_gen",
        "//machina/python/ops:lookup_ops",
        "//machina/python/ops:tensor_array_ops",
        "//machina/python/ops/ragged:ragged_tensor",
        "//machina/python/platform:client_testlib",
    ],
)

tf_py_strict_test(
    name = "text_line_dataset_test",
    size = "medium",
    srcs = ["text_line_dataset_test.py"],
    shard_count = 4,
    deps = [
        ":checkpoint_test_base",
        ":test_base",
        "//machina/python/data/ops:dataset_ops",
        "//machina/python/data/ops:options",
        "//machina/python/data/ops:readers",
        "//machina/python/framework:combinations",
        "//machina/python/framework:errors",
        "//machina/python/platform:client_testlib",
        "//machina/python/util:compat",
        "@absl_py//absl/testing:parameterized",
    ],
)

tf_py_strict_test(
    name = "tf_record_dataset_test",
    size = "small",
    srcs = ["tf_record_dataset_test.py"],
    shard_count = 8,
    deps = [
        ":checkpoint_test_base",
        ":test_base",
        ":tf_record_test_base",
        "//machina/python/data/ops:dataset_ops",
        "//machina/python/data/ops:options",
        "//machina/python/data/ops:readers",
        "//machina/python/framework:combinations",
        "//machina/python/framework:constant_op",
        "//machina/python/platform:client_testlib",
        "@absl_py//absl/testing:parameterized",
    ],
)

py_strict_library(
    name = "tf_record_test_base",
    srcs = [
        "tf_record_test_base.py",
    ],
    deps = [
        ":test_base",
        "//machina/core:protos_all_py",
        "//machina/python/data/experimental/ops:readers",
        "//machina/python/data/ops:readers",
        "//machina/python/framework:dtypes",
        "//machina/python/lib/io:python_io",
        "//machina/python/ops:parsing_ops",
        "//machina/python/util:compat",
    ],
)

tf_py_strict_test(
    name = "unbatch_test",
    size = "medium",
    srcs = ["unbatch_test.py"],
    deps = [
        ":checkpoint_test_base",
        ":test_base",
        "//machina/python/data/experimental/ops:random_access",
        "//machina/python/data/ops:dataset_ops",
        "//machina/python/data/ops:options",
        "//machina/python/framework:combinations",
        "//machina/python/framework:constant_op",
        "//machina/python/framework:dtypes",
        "//machina/python/framework:errors",
        "//machina/python/framework:sparse_tensor",
        "//machina/python/ops:array_ops",
        "//machina/python/ops:math_ops",
        "//machina/python/ops:string_ops",
        "//machina/python/ops/ragged:ragged_factory_ops",
        "//machina/python/platform:client_testlib",
        "//machina/python/util:compat",
        "//third_party/py/numpy",
        "@absl_py//absl/testing:parameterized",
    ],
)

tf_py_strict_test(
    name = "unique_test",
    size = "medium",
    srcs = ["unique_test.py"],
    shard_count = 3,
    deps = [
        ":checkpoint_test_base",
        ":test_base",
        "//machina/python/data/ops:dataset_ops",
        "//machina/python/framework:combinations",
        "//machina/python/framework:dtypes",
        "//machina/python/platform:client_testlib",
        "//machina/python/util:compat",
        "@absl_py//absl/testing:parameterized",
    ],
)

py_strict_test(
    name = "io_test",
    srcs = ["io_test.py"],
    deps = [
        ":checkpoint_test_base",
        ":test_base",
        "//machina/python/data/ops:dataset_ops",
        "//machina/python/eager:def_function",
        "//machina/python/framework:combinations",
        "//machina/python/ops:variables",
        "//machina/python/platform:client_testlib",
        "//third_party/py/numpy",
        "@absl_py//absl/testing:parameterized",
    ],
)

py_strict_test(
    name = "rebatch_test",
    srcs = ["rebatch_test.py"],
    deps = [
        ":checkpoint_test_base",
        ":test_base",
        "//machina/python/data/ops:dataset_ops",
        "//machina/python/data/util:nest",
        "//machina/python/framework:combinations",
        "//machina/python/ops:array_ops",
        "//machina/python/ops/ragged:ragged_tensor",
        "//machina/python/platform:client_testlib",
        "@absl_py//absl/testing:parameterized",
    ],
)

tf_py_strict_test(
    name = "window_test",
    size = "medium",
    srcs = ["window_test.py"],
    shard_count = 2,
    deps = [
        ":checkpoint_test_base",
        ":test_base",
        "//machina/python/data/ops:dataset_ops",
        "//machina/python/data/util:nest",
        "//machina/python/framework:combinations",
        "//machina/python/framework:dtypes",
        "//machina/python/framework:errors",
        "//machina/python/framework:sparse_tensor",
        "//machina/python/ops:array_ops",
        "//machina/python/ops:math_ops",
        "//machina/python/platform:client_testlib",
        "//third_party/py/numpy",
        "@absl_py//absl/testing:parameterized",
    ],
)

tf_py_strict_test(
    name = "zip_test",
    size = "small",
    srcs = ["zip_test.py"],
    shard_count = 4,
    deps = [
        ":checkpoint_test_base",
        ":test_base",
        "//machina/python/data/experimental/ops:global_shuffle_op",
        "//machina/python/data/experimental/ops:random_access",
        "//machina/python/data/ops:dataset_ops",
        "//machina/python/data/ops:options",
        "//machina/python/framework:combinations",
        "//machina/python/framework:errors",
        "//machina/python/framework:tensor_shape",
        "//machina/python/platform:client_testlib",
        "//third_party/py/numpy",
        "@absl_py//absl/testing:parameterized",
    ],
)
