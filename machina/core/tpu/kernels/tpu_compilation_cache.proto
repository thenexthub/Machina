/*
 *
 * Copyright (c) 2025, NeXTHub Corporation. All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 * 
 * Author: Tunjay Akbarli
 * Date:  Saturday, May 24, 2025.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at:
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 
 * Please contact NeXTHub Corporation, 651 N Broad St, Suite 201,
 * Middletown, DE 19709, New Castle County, USA.
 *
 */
syntax = "proto3";

package machina.tpu;

import "machina/compiler/tf2xla/host_compute_metadata.proto";
import "machina/core/tpu/kernels/tpu_compilation_cache_common.proto";

// Response for GetTpuProgram RPC.
message GetTpuProgramResponseExternal {
  message Blob {
    bytes data = 1;
  }

  Blob proto = 1;
  tf2xla.HostComputeMetadata host_compute_metadata = 2;
  bool may_modify_variables = 3;
  Blob compiler_metadata = 4;
  // Whether the program is empty, which could be true for sharding/unsharding
  // entries.
  bool is_empty = 5;
}

service TpuCompilationCacheServiceExternal {
  // This method requests the cached proto that the TPU execute op has been
  // instructed to execute.
  rpc GetTpuProgram(GetTpuProgramRequest)
      returns (GetTpuProgramResponseExternal) {}
}
