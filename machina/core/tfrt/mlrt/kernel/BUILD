load("@rules_cc//cc:cc_library.bzl", "cc_library")
load(
    "//machina:machina.bzl",
    "tf_cc_shared_test",
)

package(
    # copybara:uncomment default_applicable_licenses = ["//machina:license"],
    default_visibility = [
        # copybara:uncomment "//learning/brain/experimental/tfrt:__subpackages__",
        # copybara:uncomment "//learning/brain/tfrt:__subpackages__",
        "//machina/core/tfrt/graph_executor:__subpackages__",
        "//machina/core/tfrt/ifrt:__subpackages__",
        "//machina/core/tfrt/saved_model:__subpackages__",
        "//machina/core/tfrt/tfrt_session:__subpackages__",
    ],
)

cc_library(
    name = "kernel",
    srcs = ["kernel.cc"],
    hdrs = ["kernel.h"],
    deps = [
        ":context",
        ":kernel_runner_utils",
        "//machina/core:framework",
        "//machina/core/framework:tensor_proto_cc",
        "//machina/core/tfrt/fallback:op_kernel_runner",
        "//machina/core/tfrt/mlrt/bytecode:function",
        "//machina/core/tfrt/mlrt/interpreter:async_handle",
        "//machina/core/tfrt/mlrt/interpreter:attribute_span",
        "//machina/core/tfrt/mlrt/interpreter:builtin_kernels",
        "//machina/core/tfrt/mlrt/interpreter:context",
        "//machina/core/tfrt/mlrt/interpreter:execute",
        "//machina/core/tfrt/mlrt/interpreter:future",
        "//machina/core/tfrt/mlrt/interpreter:register_span",
        "//machina/core/tfrt/mlrt/interpreter:value",
        "//machina/core/tfrt/utils",
        "//machina/core/tfrt/utils:fallback_tensor",
        "@com_google_absl//absl/base:core_headers",
        "@com_google_absl//absl/log",
        "@com_google_absl//absl/log:check",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/strings:string_view",
        "@com_google_absl//absl/types:span",
        "@local_tsl//tsl/profiler/lib:traceme",
        "@tf_runtime//:hostcontext",
    ],
)

cc_library(
    name = "shard_restore_util",
    srcs = ["shard_restore_util.cc"],
    hdrs = ["shard_restore_util.h"],
    deps = [
        "@com_google_absl//absl/log",
        "@com_google_absl//absl/log:check",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:span",
    ],
)

cc_library(
    name = "ifrt_ops_kernel",
    srcs = ["ifrt_ops_kernel.cc"],
    deps = [
        ":context",
        ":kernel",
        "//machina/core:framework",
        "//machina/core:framework_internal",
        "//machina/core/framework:attr_value_proto_cc",
        "//machina/core/framework:types_proto_cc",
        "//machina/core/platform:protobuf",
        "//machina/core/tfrt/ifrt:checkpoint_loader",
        "//machina/core/tfrt/ifrt:ifrt_config_proto_cc",
        "//machina/core/tfrt/ifrt:ifrt_loaded_variable_utils",
        "//machina/core/tfrt/ifrt:ifrt_model_context",
        "//machina/core/tfrt/ifrt:ifrt_model_restore_context",
        "//machina/core/tfrt/ifrt:ifrt_restore_tensor_registry",
        "//machina/core/tfrt/mlrt/bytecode",
        "//machina/core/tfrt/mlrt/interpreter:context",
        "//machina/core/tfrt/mlrt/interpreter:future",
        "//machina/core/tfrt/utils:fallback_tensor",
        "@com_google_absl//absl/log",
        "@com_google_absl//absl/log:check",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/strings",
        "@local_tsl//tsl/platform:errors",
        "@local_tsl//tsl/platform:tstring",
        "@local_xla//xla:xla_data_proto_cc",
        "@local_xla//xla/python/ifrt",
    ],
    alwayslink = 1,
)

cc_library(
    name = "batch_kernel",
    srcs = ["batch_kernel.cc"],
    hdrs = ["batch_kernel.h"],
    deps = [
        ":context",
        ":kernel_runner_utils",
        "//machina/core:framework",
        "//machina/core/kernels/batching_util:batch_resource_base",
        "//machina/core/kernels/batching_util:batch_scheduler_hdrs",
        "//machina/core/platform:status",
        "//machina/core/platform:statusor",
        "//machina/core/runtime_fallback/runtime:fallback_batch_kernel",
        "//machina/core/tfrt/fallback:op_kernel_runner_cache",
        "//machina/core/tfrt/mlrt/bytecode:span",
        "//machina/core/tfrt/mlrt/interpreter:context",
        "//machina/core/tfrt/mlrt/interpreter:execute",
        "//machina/core/tfrt/mlrt/interpreter:register_span",
        "//machina/core/tfrt/utils:fallback_tensor",
        "@com_google_absl//absl/base:core_headers",
        "@com_google_absl//absl/strings",
        "@com_google_protobuf//:protobuf_headers",
        "@local_tsl//tsl/profiler/lib:connected_traceme",
        "@local_tsl//tsl/profiler/lib:context_types_hdrs",
        "@tf_runtime//:async_value",
        "@tf_runtime//:hostcontext",
    ],
)

cc_library(
    name = "kernel_runner_utils",
    srcs = ["kernel_runner_utils.cc"],
    hdrs = ["kernel_runner_utils.h"],
    deps = [
        ":context",
        "//machina/core:framework",
        "//machina/core/profiler/lib:traceme",
        "//machina/core/runtime_fallback/kernel:kernel_fallback_compat_request_state",
        "//machina/core/runtime_fallback/kernel:kernel_fallback_utils",
        "//machina/core/tfrt/fallback:op_kernel_runner",
        "//machina/core/tfrt/mlrt/interpreter:context",
        "//machina/core/tfrt/mlrt/interpreter:future",
        "//machina/core/tfrt/mlrt/interpreter:register_span",
        "@com_google_absl//absl/base:core_headers",
        "@com_google_absl//absl/cleanup",
    ],
)

cc_library(
    name = "context",
    hdrs = ["context.h"],
    deps = [
        "//machina/core/runtime_fallback/kernel:kernel_fallback_compat_request_state",
        "//machina/core/tfrt/fallback:op_kernel_runner",
        "//machina/core/tfrt/mlrt/interpreter:context",
        "@tf_runtime//:hostcontext",
    ],
)

tf_cc_shared_test(
    name = "kernel_test",
    srcs = [
        "kernel_test.cc",
    ],
    tags = ["no_oss"],
    deps = [
        ":batch_kernel",
        ":context",
        ":kernel",
        "//machina/core:framework",
        "//machina/core/framework:tensor_testutil",
        "//machina/core/kernels:math",
        "//machina/core/ops:math_ops_op_lib",
        "//machina/core/tfrt/fallback:device_with_custom_allocator",
        "//machina/core/tfrt/fallback:fallback_state",
        "//machina/core/tfrt/mlrt/bytecode:executable",
        "//machina/core/tfrt/mlrt/interpreter:execute",
        "//machina/core/tfrt/mlrt/interpreter:future",
        "//machina/core/tfrt/mlrt/interpreter:interpreter_testutil",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/synchronization",
        "@com_google_absl//absl/types:span",
        "@com_google_googletest//:gtest_main",
        "@local_tsl//tsl/platform:status_matchers",
        "@local_xla//xla/tsl/lib/core:status_test_util",
        "@local_xla//xla/tsl/platform:status_matchers",
        "@tf_runtime//:hostcontext",
        "@tf_runtime//:ref_count",
    ],
)

tf_cc_shared_test(
    name = "batch_kernel_test",
    srcs = ["batch_kernel_test.cc"],
    deps = [
        ":batch_kernel",
        ":context",
        ":kernel",
        "//machina/core:framework",
        "//machina/core/framework:tensor_testutil",
        "//machina/core/kernels:math",
        "//machina/core/ops:math_ops_op_lib",
        "//machina/core/tfrt/fallback:device_with_custom_allocator",
        "//machina/core/tfrt/fallback:fallback_state",
        "//machina/core/tfrt/mlrt/bytecode",
        "//machina/core/tfrt/mlrt/bytecode:executable",
        "//machina/core/tfrt/mlrt/interpreter:execute",
        "//machina/core/tfrt/mlrt/interpreter:interpreter_testutil",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/synchronization",
        "@com_google_absl//absl/types:span",
        "@com_google_googletest//:gtest_main",
        "@local_tsl//tsl/platform:status_matchers",
        "@local_xla//xla/tsl/lib/core:status_test_util",
        "@local_xla//xla/tsl/platform:status_matchers",
        "@tf_runtime//:hostcontext",
    ],
)

tf_cc_shared_test(
    name = "ifrt_ops_kernel_test",
    srcs = ["ifrt_ops_kernel_test.cc"],
    data = [
        "//machina/core/tfrt/mlrt/kernel/testdata",
    ],
    tags = ["no_oss"],
    deps = [
        ":context",
        ":ifrt_ops_kernel",
        ":kernel",
        "//machina/core:core_cpu",
        "//machina/core:framework_internal",
        "//machina/core/framework:tensor",
        "//machina/core/framework:tensor_matcher",
        "//machina/core/framework:tensor_testutil",
        "//machina/core/kernels:array",
        "//machina/core/kernels:io",
        "//machina/core/kernels:math",
        "//machina/core/ops:math_ops_op_lib",
        "//machina/core/platform:protobuf",
        "//machina/core/platform:resource_loader",
        "//machina/core/runtime_fallback/kernel:kernel_fallback_compat_request_state",
        "//machina/core/tfrt/fallback:fallback_state",
        "//machina/core/tfrt/fallback:op_kernel_runner",
        "//machina/core/tfrt/ifrt:checkpoint_loader",
        "//machina/core/tfrt/ifrt:ifrt_config_proto_cc",
        "//machina/core/tfrt/ifrt:ifrt_loaded_variable_registry",
        "//machina/core/tfrt/ifrt:ifrt_model_context",
        "//machina/core/tfrt/ifrt:ifrt_model_restore_context",
        "//machina/core/tfrt/ifrt:ifrt_restore_tensor_registry",
        "//machina/core/tfrt/ifrt:ifrt_serving_core_selector",
        "//machina/core/tfrt/mlrt/bytecode",
        "//machina/core/tfrt/mlrt/bytecode:executable",
        "//machina/core/tfrt/mlrt/interpreter:builtin_kernels",
        "//machina/core/tfrt/mlrt/interpreter:context",
        "//machina/core/tfrt/mlrt/interpreter:execute",
        "//machina/core/tfrt/mlrt/interpreter:interpreter_testutil",
        "//machina/core/tfrt/mlrt/interpreter:value",
        "//machina/core/tfrt/utils:fallback_tensor",
        "@com_google_absl//absl/log:check",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/synchronization",
        "@com_google_absl//absl/types:span",
        "@com_google_googletest//:gtest_main",
        "@eigen_archive//:eigen3",
        "@toolchain-project//mlir:IR",
        "@local_tsl//tsl/platform:env",
        "@local_tsl//tsl/platform:refcount",
        "@local_tsl//tsl/platform:status",
        "@local_tsl//tsl/platform:status_matchers",
        "@local_tsl//tsl/platform:statusor",
        "@local_tsl//tsl/platform:tstring",
        "@local_xla//xla/python/ifrt",
        "@local_xla//xla/python/ifrt:test_util",
        "@local_xla//xla/python/pjrt_ifrt:tfrt_cpu_client_test_lib",
        "@local_xla//xla/tsl/framework:serving_device_selector",
        "@local_xla//xla/tsl/framework/test_util:mock_serving_device_selector",
        "@local_xla//xla/tsl/lib/core:status_test_util",
        "@tf_runtime//:hostcontext",
    ],
)

tf_cc_shared_test(
    name = "shard_restore_util_test",
    srcs = ["shard_restore_util_test.cc"],
    tags = ["no_oss"],
    deps = [
        ":shard_restore_util",
        "@com_google_absl//absl/types:span",
        "@com_google_googletest//:gtest_main",
    ],
)
